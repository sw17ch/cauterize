require 'time'

module Cauterize
  class RubyBuilder
    attr_reader :rb
    def initialize(rb_file, name="cauterize")
      @rb = rb_file
      @name = name.camel
    end

    def build
      build_rb
    end

    def build_rb
      f = []

      f << "# WARNING: This is generated code. Do not edit this file directly."
      f << ""
      f << "require_relative './cauterize_ruby_baseclasses'"
      f << ""

      instances = BaseType.all_instances
      builders = instances.map {|i| Builders.get(:ruby, i)}
      builders.each { |b| b.class_defn(f) }
      f << ""

      File.open(@rb, "wb") do |fh|
        fh.write(f.join("\n").to_s)
      end
    end

  end
end
